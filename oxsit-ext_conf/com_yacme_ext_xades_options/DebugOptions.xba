<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="DebugOptions" script:language="StarBasic">REM  *****  BASIC  *****

Sub Main
&apos;examine configuration, for test
	GlobalScope.BasicLibraries.LoadLibrary(&quot;Tools&quot;)&apos;contiene LoadDialog, usata pi√π sotto
&apos; abilitare per debug con xray
	GlobalScope.BasicLibraries.LoadLibrary(&quot;XrayTool&quot;)&apos;

	tryConfigSSCD()
&apos;	tryCertificateDiscovery()
End Sub

sub tryConfigSSCD

	oVal = GetRegistryKeyContent( &quot;it.plio.ext.oxsit.Configuration/SSCDs&quot; )
	
	xray oVal

end sub



sub tryCertificateDiscovery()
 &apos;try the new certificate discovery service
	dim sscds as object
 	&apos;istanzia il servizio di ricerca cetificati
	sscds = createUNOservice(&quot;it.plio.ext.oxsit.security.AvailableSSCDs&quot;)
 	&apos;presenta il servizio, senza certificati
&apos;	xray sscds
 	&apos;esegue la ricerca dei dispositivi presenti
	sscds.scanDevices( true )
	if sscds.HasSSCDevices &gt; 0 then
		&apos;presenta la ricerca eseguita
&apos;		xray sscds
	 
		dim sscdList() as object
	
		&apos;carica la lista dei dispositivi trovati 
		sscdList() = sscds.AvailableSSCDevices
		&apos;presenta oggetto dispositivi trovati
		dim ix as integer
		for ix = 0 to (sscds.HasSSCDevices - 1)
&apos;			xray sscdList(ix)

			if sscdList(ix).HasQualifiedCertificates &gt; 0 then
				dim certList() as object
				certList() = sscdList(ix).QualifiedCertificates
				&apos;print certificati
				for i = 0 to (sscdList(ix).HasQualifiedCertificates-1)
&apos;					xray certList(i)
					dim sExt() as object
					sExt() = certList(i).CriticalCertificateExtensions
&apos;					xray sExt
					for ax = 0 to UBound(sExt)
						&apos;xray sExt(ax)
					next ax
					sExt() = certList(i).CertificateExtensions
&apos;					xray sExt
					for ax = 0 to UBound(sExt)
						&apos;xray sExt(ax)
					next ax
				next i
			else
				print &quot;non ci sono certificati&quot;
			end if
		next ix
	else
		print &quot;non ci sono token!&quot;
	end if
	sscds.dispose()
end sub

</script:module>