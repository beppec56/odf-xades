<!--
    Copyright 2009 by Giuseppe Castagno beppec56@openoffice.org
    Copyright 2009 by Roberto Resoli resoli@osor.eu

    The Contents of this file are made available subject to
    the terms of European Union Public License (EUPL) version 1.1
    as published by the European Community.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the EUPL.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    EUPL for more details.

    You should have received a copy of the EUPL along with this
    program.  If not, see:
    https://www.osor.eu/eupl, http://ec.europa.eu/idabc/eupl.
-->

<!--
add comments here.........

ATTENTION:
the default target must be removed

-->
<project name="oxsit-sig_opt_uno" default="build-jar" basedir=".">
	<property name="project_friendly_name" value="oxsit" />	
	<property name="project_name" value="${project_friendly_name}-sig_opt_uno" />
	<property name="extension_jar_file" value="${project_name}.uno.jar" />
	<description>
        Build the jar file ${extension_jar_file}.
    </description>
	<echo>Build the jar file ${extension_jar_file}.</echo>
	<!-- set global properties for this build -->

	<!--
	grab option file for platform 
	platform file are:
	Linux: build.Linux-i386.properties
	-->
	<echo message="${project_name}: platform specific file is: build.${os.name}-${os.arch}.properties."/>
	<property file="build.${os.name}-${os.arch}.properties" />
	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="build-eclipse" location="bin"/>
	<property name="dist" location="dist" />
	
	<!-- ROB BC libs and j4sign locations -->
	<property name="lib" location="lib" />
	<property name="j4sign" location="j4sign" />
	
	<!-- ROB BC libs names -->
	<property name="bcmail_jar" value="bcmail-jdk16-143.jar"/>
	<property name="bcprov_jar" value="bcprov-jdk16-143.jar"/>
	
	<!--
		the OOo SDK root path, used for the custom loader
		edit to suit your installation

	 The variable ooosdk should be set in the Eclipse IDE, Ant variables, or in a
	 build.${os.name}-${os.arch}.properties file.
	 See README file in doc project.
	-->
	
	<!-- temporarily disabled, no need it seems..
	 property name="ooosdk" value="$ooosdk" />	
	<available file="${ooosdk}" type="dir" property="ooosdk.available" value="false" />
	<fail message="No OOo sdk available. Please edit the file build.${os.name}-${os.arch}.properties to correct it.">
		<condition>
			<not>
				<isset property="ooosdk.available" />
			</not>
		</condition>
	</fail -->
		
	<!--
	 The variable ooo_ure_classes_path should be set in the Eclipse IDE, Ant variables, or in a
	 build.${os.name}-${os.arch}.properties file.
	 See README file in doc project.
	-->
	<property name="ooo_ure_classes_path" value="$ooo_ure_classes_path" />
	<available file="${ooo_ure_classes_path}" type="dir" property="ooo_classes_path.available" value="false" />
	<fail message="No OOo URE classes available. Please edit the file build.${os.name}-${os.arch}.properties to correct it.">
		<condition>
			<not>
				<isset property="ooo_classes_path.available" />
			</not>
		</condition>
	</fail>

	<!--
	 The variable ooo_classes_path should be set in the Eclipse IDE, Ant variables, or in a
	 build.${os.name}-${os.arch}.properties file.
	 See README file in doc project.
	 -->
	<property name="ooo_classes_path" value="$ooo_classes_path" />
	<available file="${ooo_classes_path}" type="dir" property="ooo_classes_path.available" value="false" />
	<fail message="No OOo classes available. Please edit the file build.${os.name}-${os.arch}.properties to correct it.">
		<condition>
			<not>
				<isset property="ooo_classes_path.available" />
			</not>
		</condition>
	</fail>

	<!-- directory to zip for archive -->
	<property name="archr" location="to-be-zipped" />
	<property name="arch" location="${archr}/${project_name}-${version}" />

	<dependset>
		<srcfilelist dir="${xades_myclass_path}" files="signature_component.uno.jar" />
		<targetfilelist dir="${dist}/lib" files="${extension_jar_file}" />
	</dependset>

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
	</target>

	<target name="compile" depends="init" description="compile the source ">
		<!-- Compile the java code from ${src} into ${build} -->
		
		<!-- new UNO Java type classes -->
		<property name="my_uno_types_path" value="${src}/../../${project_friendly_name}-uno_types/dist/lib" />
		<available file="${my_uno_types_path}" type="dir" property="my_uno_types_path.available" value="false" />
		<fail message="No new uno types classes available. Please edit the build file to correct it.(${my_uno_types_path})">
			<condition>
				<not>
					<isset property="my_uno_types_path.available" />
				</not>
			</condition>
		</fail>
		<javac  debug="true" target="1.6" srcdir="${src}" destdir="${build}" deprecation="true">
			<classpath>
				<pathelement path="${ooo_ure_classes_path}/juh.jar" />
				<pathelement path="${ooo_ure_classes_path}/jurt.jar" />
				<pathelement path="${ooo_ure_classes_path}/ridl.jar" />
				<pathelement path="${ooo_classes_path}/unoil.jar" />
				<pathelement path="${my_uno_types_path}/${project_friendly_name}-uno_types.uno.jar" />
				<pathelement path="${lib}/${bcmail_jar}" />
				<pathelement path="${lib}/${bcprov_jar}" />
			</classpath>
			<src path="${j4sign}" />
			<compilerarg value="-Xlint:unchecked" />
		</javac>
		
		<!-- ROB: copy the properties file into the build destination -->
		<copy todir="${build}" failonerror="false">
			<fileset dir="${j4sign}">
				  <include name="**/*.properties"/>
				  <exclude name="**/*.html"/>
			</fileset>
		</copy>

		<!--
			copy helper classes from OOo SDK
			Disable the whole section if the stand alone capability is not needed
		-->
		<!-- copy todir="${build}" failonerror="false">
			<fileset dir="${ooosdk}/classes">
				<include name="**/*" />
			</fileset>
		</copy -->	
		<!-- end of copy helper classes from OOo SDK -->

		<!--
			copy interface classes
		-->
		<!-- copy todir="${build}" failonerror="true">
			<fileset dir="${basedir}/class-lib">
				<include name="**/*" />
			</fileset>
		</copy -->
		<!-- end of copy idlc generated classes -->
	</target>

	<target name="build-jar" depends="compile" description="generate the distribution">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}/lib" />
		<!-- ROB Copy BC libs in the distribution directory -->
		<copy file="lib/${bcmail_jar}" todir="${dist}/lib" />
		<copy file="lib/${bcprov_jar}" todir="${dist}/lib" />
		<copy file="lib/libOCFPCSC1.so" todir="${dist}/lib" />
		<copy file="lib/OCFPCSC1.dll" todir="${dist}/lib" />
		<copy file="lib/pkcs11wrapper.dll" todir="${dist}/lib" />
		<copy file="lib/libpkcs11wrapper.so" todir="${dist}/lib" />

		<!-- Put everything in ${build} into the .jar file -->
		<jar jarfile="${dist}/lib/${extension_jar_file}" basedir="${build}">
			<!-- build the manifest file on-line -->
			<manifest>
				<attribute name="Built-By" value="https://forge.osor.eu/projects/ooo-xadessig-it" />
				<attribute name="Specification-Title" value="Firma digitale XAdES" />
				<attribute name="Specification-Version" value="${spec_version}" />
				<attribute name="Specification-Vendor" value="http://www.plio.it" />
				<attribute name="Implementation-Title" value="${project_name}" />
				<attribute name="Implementation-Version" value="${version} ${TODAY}" />
				<attribute name="Implementation-Vendor" value="http://www.plio.it" />
				<attribute name="Ant-Version" value="${ant.version}" />
				<attribute name="UNO-Type-Path" value="" />
				<attribute name="RegistrationClassName" value="it.plio.ext.oxsit.test.RegisterServices" />
				<!-- ROB: BC libs -->
				<attribute name="Class-Path" value="./${extension_jar_file} ${bcmail_jar} ${bcprov_jar}"/> 
			</manifest>
		</jar>
	</target>

	<!-- dependency of description.xml from build number -->
	<dependset>
		<srcfilelist dir="${basedir}" files="build.number" />
		<targetfilelist dir="${extension_dest_dir}" files="description.xml" />
	</dependset>

	<target name="clean" description="clean up the project">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${archr}" />
		<delete dir="${build-eclipse}" />
		<delete dir="${build}" />
		<delete dir="${dist}" />
		<delete dir="${extension_dest_dir}" />
	</target>

</project>
