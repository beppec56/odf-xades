/*************************************************************************
 * 
 *  Copyright 2009 by Giuseppe Castagno beppec56@openoffice.org
 *  
 *  The Contents of this file are made available subject to
 *  the terms of European Union Public License (EUPL) version 1.1
 *  as published by the European Community.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the EUPL.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  EUPL for more details.
 *
 *  You should have received a copy of the EUPL along with this
 *  program.  If not, see:
 *  https://www.osor.eu/eupl, http://ec.europa.eu/idabc/eupl.
 *
 ************************************************************************/

#ifndef __com_yacme_ext_oxsit_XOX_SingletonDataAccess_idl__
#define __com_yacme_ext_oxsit_XOX_SingletonDataAccess_idl__

#include <com/sun/star/lang/XComponent.idl>
#include <com/sun/star/util/XChangesListener.idl>
#include <com/sun/star/container/ElementExistException.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>
#include "XOX_DocumentSignaturesState.idl"


  module com { module yacme { module ext { module oxsit {

/** Interface to access the global volatile extension data

  */
	interface XOX_SingletonDataAccess
	{
		/** To add a new structure describing the XAdES document signatues of the document
			@see  com::yacme::ext::oxsit::security::cert::XOX_DocumentSignaturesState for a description of the related interface
			
			if the document signature structure of the document in DocumentId, already exists, the interface does nothing and returns the
			existent document signatures structures.
			The function is multithread safe, that is on every call only a single instance can run.

			@param DocumentId the unique id for this document

			@param DocumentSignaturesChangesListener the listener that will be added to the newly created document signature structure
	
			@return the new added structure (in form of the main structure interface)
		*/
		com::yacme::ext::oxsit::security::XOX_DocumentSignaturesState
				initDocumentAndListener( [in] string DocumentId,
						[in] com::sun::star::util::XChangesListener DocumentSignaturesChangesListener);

		/** return the XOX_DocumentSignaturesState interface of the document
			@see  XOX_DocumentSignaturesState
			@param DocumentId the document id
		*/
		com::yacme::ext::oxsit::security::XOX_DocumentSignaturesState getDocumentSignatures([in] string DocumentId);

		/**
			the document signatures structure is removed 
		*/
		void removeDocumentSignatures( [in]  string DocumentId);

		/** Get a UNO component object from the list of the singled UNO object
			available until the signleton is disposed of.
		*/
		com::sun::star::lang::XComponent	getUNOComponent( [in] string UNOComponentName )
											raises (com::sun::star::container::NoSuchElementException,
													com::sun::star::lang::IllegalArgumentException);

		/** Add a UNO component object to the list of the singled UNO object
			available until the signleton is disposed of.
		*/
		void	addUNOComponent( [in] string UNOComponentName, [in] com::sun::star::lang::XComponent TheComponent )
											raises (com::sun::star::container::ElementExistException,
													com::sun::star::lang::IllegalArgumentException);

		/** Remove a UNO component object from the list of the singled UNO object
			available until the signleton is disposed of.
		*/
		void	removeUNOComponent( [in] string UNOComponentName )
											raises (com::sun::star::container::NoSuchElementException,
													com::sun::star::lang::IllegalArgumentException);
	}; 
 
  }; }; }; };
 
#endif

