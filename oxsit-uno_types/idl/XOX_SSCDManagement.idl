/*************************************************************************
 * 
 *  Copyright 2009 by Giuseppe Castagno beppec56@openoffice.org
 *  
 *  The Contents of this file are made available subject to
 *  the terms of European Union Public License (EUPL) version 1.1
 *  as published by the European Community.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the EUPL.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  EUPL for more details.
 *
 *  You should have received a copy of the EUPL along with this
 *  program.  If not, see:
 *  https://www.osor.eu/eupl, http://ec.europa.eu/idabc/eupl.
 *
 ************************************************************************/

#ifndef __it_plio_ext_oxsit_security_cert_XOX_SSCDManagement_idl__
#define __it_plio_ext_oxsit_security_cert_XOX_SSCDManagement_idl__

#include <com/sun/star/uno/XComponentContext.idl> 
#include <com/sun/star/uno/Exception.idl>
#include <com/sun/star/frame/XFrame.idl>
#include "XOX_SSCDevice.idl"

  module it { module plio { module ext { module oxsit { module security {

	/** this interface represents the main interface to describe
	  the available SSCD devices on system.
	  <p>It needs to be expanded</p>
	 */
  interface XOX_SSCDManagement
  {
		/** The number of SSC Devices on this system.
		*/
		[attribute,readonly] long HasSSCDevices;
		/** The list of SSC Devices on this system.
		*/
		[attribute,readonly] sequence<it::plio::ext::oxsit::security::XOX_SSCDevice> AvailableSSCDevices;


		/** This method will start the scan of the available SSCDs devices.
		@param bCalledFromGUI set to true if a GUI exception error dialog is needed, else set to false.
		<p>Important: do not set it to true if there is no GUI (for example from headless mode) because a crash may happen.</p> 
		*/
		void scanDevices([in] com::sun::star::frame::XFrame xFrame,
									[in] com::sun::star::uno::XComponentContext xContext)
						raises( ::com::sun::star::uno::Exception );
		/** Add a new device to the list of available devices.
		*/
		void addSSCDevice( [in] it::plio::ext::oxsit::security::XOX_SSCDevice SSCDevice );
  };
 
  }; }; }; }; };
 
#endif
