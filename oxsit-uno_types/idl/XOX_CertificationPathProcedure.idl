/*************************************************************************
 * 
 *  Copyright 2009 by Giuseppe Castagno beppec56@openoffice.org
 *  
 *  The Contents of this file are made available subject to
 *  the terms of European Union Public License (EUPL) version 1.1
 *  as published by the European Community.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the EUPL.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  EUPL for more details.
 *
 *  You should have received a copy of the EUPL along with this
 *  program.  If not, see:
 *  https://www.osor.eu/eupl, http://ec.europa.eu/idabc/eupl.
 *
 ************************************************************************/

#ifndef __it_plio_ext_oxsit_security_cert_XOX_CertificationPathProcedure_idl__
#define __it_plio_ext_oxsit_security_cert_XOX_CertificationPathProcedure_idl__

#include <com/sun/star/lang/XComponent.idl>
#include <com/sun/star/uno/Exception.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/uno/XComponentContext.idl> 
#include <com/sun/star/uno/XInterface.idl> 
#include <com/sun/star/frame/XFrame.idl>
#include "CertificationAuthorityState.idl"

  module it { module plio { module ext { module oxsit { module security { module cert {

/** Interface of checker to verify the certification path of a X509 Certificate.
 */
	interface XOX_CertificationPathProcedure
	{
		/** the state of the CA (Certification Authority) control.
		This in in the form of an enumeration, the one defined for Certification autority state
	 	*/
		[attribute, readonly] it::plio::ext::oxsit::security::cert::CertificationAuthorityState CertificationAuthorityState;

		/** Use this to initialize the service implementing this interface, 
		for the part related to the interface.
		<p>It loads into memory the CA autority list from the signed file distributed by CNIPA.</p>
		@param bUseGui set to true if called from a GUI aware service, else set to false.
		<p>GUI aware component means a component that instantiated the service implementing this interface<br>
		using a XComponentContext where it's legal to call OpenOffice.org GUI components.</p>
		<p>For example if you use the interface from a synchronous job service, you can't use a GUI.</p>
		*/
		void initializeProcedure( [in] com::sun::star::frame::XFrame xFrame );

		/** control the certification path of the UNO component passed as a parameter.
			the XComponent passed as a parameter must have the XOX_QualifiedInterface available
			for executing the function.
		 <p>
		 @param xFrame the frame used for GUI if needed in the procedures<br>
		 		if the parameter is null, there will be no GUI
		@param xCertificate the certificate to be verified		 		
		 </p>
		*/
		it::plio::ext::oxsit::security::cert::CertificationAuthorityState
			verifyCertificationPath( [in] com::sun::star::frame::XFrame xFrame, 
							[in] com::sun::star::uno::XInterface xCertificate )
						raises( ::com::sun::star::lang::IllegalArgumentException,
								::com::sun::star::uno::Exception );
		/**
		Called from configuration UI dialog.
		<p>It's meant to perform initialization for the special service implmenting the interface,
		since behavior can change from a checker to another.</p>
		<p>the passed frame and context are the one of the calling object, that is the ones to
		be used to instantiate the dialog boxes needed for parameter editing</p>
		*/
		void	configureOptions(	[in] com::sun::star::frame::XFrame xFrame, 
							[in] com::sun::star::uno::XComponentContext xContext);

		/**
		returns the number of certification autorities available, useful for user feedback on operations.<br>
		returns -1 if not initialized.
		*/
		long	getCertificationAuthoritiesNumber() ;
		/** Returns a sequence of the Certification Autority certificates used for the<br>
			control this interface implements, e.g. the ones unsed to search for the<br>
			certification path.
			<p>The returned XComponent object sequence is a sequence of object implementing<br>
			the XOX_X509Certificate interface that can be used to retrieve the relevant<br>
			Certification Autority data.</p> 
		*/
		sequence < com::sun::star::lang::XComponent > getCertificationAuthorities(
									[in] com::sun::star::frame::XFrame xFrame);

	} ;

  }; }; }; }; };  };
 
#endif
