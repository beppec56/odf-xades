/*************************************************************************
 * 
 *  Copyright 2009 by Giuseppe Castagno beppec56@openoffice.org
 *  
 *  The Contents of this file are made available subject to
 *  the terms of European Union Public License (EUPL) version 1.1
 *  as published by the European Community.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the EUPL.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  EUPL for more details.
 *
 *  You should have received a copy of the EUPL along with this
 *  program.  If not, see:
 *  https://www.osor.eu/eupl, http://ec.europa.eu/idabc/eupl.
 *
 ************************************************************************/

#ifndef __com_yacme_ext_oxsit_security_cert_XOX_DocumentSignaturesState_idl__
#define __com_yacme_ext_oxsit_security_cert_XOX_DocumentSignaturesState_idl__

#include <com/sun/star/embed/XStorage.idl>
#include "XOX_SignatureState.idl"

  module com { module yacme { module ext { module oxsit { module security {

	/** this interface represents the main interface to describe
	  document signature states.
	  It is used to track the state of the signature in global document status (for saving/editing operations).
	  <p>That is, the state of all the signatures in a document.</p>
	 */
  interface XOX_DocumentSignaturesState
  {
		/** This document storage
		*/
		[attribute] com::sun::star::embed::XStorage DocumentStorage;

                /** this document signatures states, this is a sequence of UNO object
                 *
                 */
               [attribute, readonly]  sequence<com::yacme::ext::oxsit::security::XOX_SignatureState> DocumentSignatureStates;

		/** this document combined signature state
		*/
		[attribute] long AggregatedDocumentSignatureStates;

		/** this document id
		*/
		[attribute] string DocumentId;

                /** Returns the signaturestate whose id is the one passed.
                    returns the UNO object if ok, else null if ID doesn't exist.
                */
                com::yacme::ext::oxsit::security::XOX_SignatureState getSignatureState( [in] string signatureID );
            
                /** Remove the signaturestate whose id is the one passed.
		    The object is disposed of
                    returns 1 if all ok, 0 if ID doesn't exist.
                */
                long removeSignatureState( [in] string signatureID );
            
                /** Adds the signaturestate passed as parameter.
                    returns 1 if all ok, 0 if ID doesn't exist.
                */
                long addSignatureState( [in] com::yacme::ext::oxsit::security::XOX_SignatureState xSignatureState );
  };
 
  }; }; }; }; };
 
#endif

