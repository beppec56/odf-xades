/*************************************************************************
 * 
 *  Copyright 2009 by Giuseppe Castagno beppec56@openoffice.org
 *  
 *  The Contents of this file are made available subject to
 *  the terms of European Union Public License (EUPL) version 1.1
 *  as published by the European Community.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the EUPL.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  EUPL for more details.
 *
 *  You should have received a copy of the EUPL along with this
 *  program.  If not, see:
 *  https://www.osor.eu/eupl, http://ec.europa.eu/idabc/eupl.
 *
 ************************************************************************/

#ifndef __it_plio_ext_oxsit_security_cert_XOX_SSCDevice_idl__
#define __it_plio_ext_oxsit_security_cert_XOX_SSCDevice_idl__

#include "XOX_CertificatePKCS11Attributes.idl"
#include "XOX_X509Certificate.idl"

  module it { module plio { module ext { module oxsit { module security {

	/** This interface is the main interface to hold data
	  of a single SSCD element on system (called token).
	  <p>The attributes described here can be retrieved using getters,
	   for example the XOX_X509Certificates attribute can be retrieved using:</p>
	  <p>getX509Certificate(), which returns a sequence of
	  XOX_X509Certificate objects.</p>
	  <p>Every XOX_X509Certificate that comes from a cryptographic token
	  has a pointer to the XOX_SSCDevice that represent the token it came from.<br>
	  It can be used in the signature process to retrieve the private key handle
	  from the cryptographic token (see PKCS 11 specification for further details
	  on how this is handled).</p>
	 */
  interface XOX_SSCDevice
  {
		/** a description of the device
		*/
		[attribute] string Description;

		/** name of the manufacturer
		*/
		[attribute] string Manufacturer;

		/** the returned ATR code, (if this is a smart card, to be seen when it's something else)
		*/
		[attribute] string ATRcode;

		/** the low level crypto library used
		*/
		[attribute] string CryptoLibrariesConfigured;

		/** the low level crypto library used
		*/
		[attribute] string CryptoLibraryUsed;

		/** The number of available certificate on the token
		*/
		[attribute,readonly]  long HasCertificates;

		/** The certificates this device contains.
		*/
		[attribute,readonly]  sequence<it::plio::ext::oxsit::security::cert::XOX_X509Certificate> X509Certificates;

		/** Adds this certificate to the list of certificates available on this token.
		@param a UNO object implementing the XOX_CertificatePKCS11Attributes interface.
		*/
		void	addCertificate( [in]  it::plio::ext::oxsit::security::cert::XOX_CertificatePKCS11Attributes CertificateAttribute);
//		void	addAQualifiedCertificate( [in] it::plio::ext::oxsit::security::cert::XOX_X509Certificate aCertificate);
  };
 
  }; }; }; }; };
 
#endif
